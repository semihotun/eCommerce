@model Entities.ViewModels.AdminViewModel.AdminProduct.ProductVM
@{
    ViewBag.Title = null;
    Layout = null;
}
<div class="table-responsive ps ps--active-x">
    <table id="productSpeficationList" class="table tablesorter table-hover dt-responsive nowrapr" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th>Özellik Key</th>
                <th>Özellik Value</th>
                <th>Sıra</th>
                <th>Üründe Gözüksünmü</th>
                <th>Filitrede Gözüksünmü</th>
                <th> </th>
            </tr>
        </thead>
    </table>
</div>
<script>
    const GetProductSpeficationDatatable =  async () => {
        let ProductSpeficationTable;
        if ($.fn.DataTable.isDataTable("#productSpeficationList")) {
            ProductSpeficationTable = $("#productSpeficationList").DataTable();
            ProductSpeficationTable.draw();
        }
        else {
            ProductSpeficationTable = $("#productSpeficationList").DataTable({
                "ajax": {
                    "url": "/Admin/ProductSpecificationAttribute/ProductSpeficationJson?ProductId=" + $("#Id").val(),
                    "datatype": "json",
                    "type": "POST",

                },
                dom: '<"bottom">rtip',
                buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print'
                ],
                "orderCellsTop": true,
                "fixedHeader": true,
                "pagingType": "full_numbers",
                "processing": true,
                "serverSide": true,
                "responsive": true,
                "searching": true,
                "columns": [
                    { "data": "SpeficationAtributeTypeName", "name": "SpeficationAtributeTypeName", "autoWidth": true },
                    { "data": "SpecificationAttributeOptionName", "name": "SpecificationAttributeOptionName", "autoWidth": true },
                    { "data": "DisplayOrder", "name": "DisplayOrder", "autoWidth": true },
                    {
                        data: null,
                        render: function (data, type, row) {
                            if (row.AllowFiltering) {
                                return "<span class='badge badge-success'>Evet</span>";
                            }
                            else {
                                return "<span class='badge badge-danger'>Hayır</span>";
                            }
                        }, "orderable": false
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            if (row.ShowOnProductPage) {
                                return "<span class='badge badge-success'>Evet</span>";
                            }
                            else {
                                return "<span class='badge badge-danger'>Hayır</span>";
                            }
                        }, "orderable": false
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return "<a onClick='ProductSpeficationDelete(" + JSON.stringify(row.Id) + ")' Id='" + row.Id + "'><i class='fa fa-trash-o datatablesil ' style='font-size:20px;' ></i></a>";
                        }, "orderable": false
                    }
                ],
                "language": {
                    "url": "/datatablelanguage.json"
                }
            });
        }
    }
</script>