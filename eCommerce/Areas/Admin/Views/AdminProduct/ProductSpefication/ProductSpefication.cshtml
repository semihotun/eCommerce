@model Entities.ViewModels.AdminViewModel.AdminProduct.ProductVM
@using Core.Utilities.Razor;
@{
    ViewData["Title"] = "ProductSpeficationCreate";
    Layout = null;
}


@Html.Partial("ProductSpefication/_ProductSpeficationCreate", Model)
@Html.Partial("ProductSpefication/_ProductSpeficationDataTable", Model)





<script>
    var ProductSpeficationTable;
    var BindProductListSpefication = function (response) {
        if ($.fn.DataTable.isDataTable("#ProductSpeficationList")) {
            ProductSpeficationTable.draw();
        }
        else {
            ProductSpeficationTable = $("#ProductSpeficationList").DataTable({
                "sAjaxSource": "/Admin/ProductSpecificationAttribute/ProductSpeficationJson?Id="+@Model.Id,
                "bServerSide": true,
                "bProcessing": true,
                "bSearchable": true,
                "bLengthChange": false,
                "searching": false,
                "columns": [
                    { "data": "Id", "name": "Id", "autoWidth": true },
                    { "data": "SpeficationAtributeTypeName", "name": "SpeficationAtributeTypeName", "autoWidth": true },
                    { "data": "SpecificationAttributeOptionName", "name": "SpecificationAttributeOptionName", "autoWidth": true },
                    { "data": "DisplayOrder", "name": "DisplayOrder", "autoWidth": true },
                    {
                        data: null,
                        render: function (data, type, row) {
                            if (row.AllowFiltering) {
                                return "<span class='badge badge-success'>Evet</span>";
                            }
                            else {
                                return "<span class='badge badge-danger'>Hayır</span>";
                            }
                        }, "orderable": false
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            if (row.ShowOnProductPage) {
                                return "<span class='badge badge-success'>Evet</span>";
                            }
                            else {
                                return "<span class='badge badge-danger'>Hayır</span>";
                            }
                        }, "orderable": false
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return "<a onClick='ProductSpeficationDelete("+row.Id+")'><i class='fa fa-trash-o datatablesil ' style='font-size:20px;' ></i></a>" ;
                        }, "orderable": false
                    }
                ], "language": {
                    "url": "/datatablelanguage.json"
                }
            });

        }

    }
    var FilterRecord = function () {
        BindProductListSpefication();
    }
    $(document).ready(function () {
        FilterRecord();
    });

    function ProductSpeficationDelete(id) {
        $.ajax({
            url: "/Admin/ProductSpecificationAttribute/ProductSpeficationDelete?id=" + id,
            error : function() {
                swal("işlem başarısız", "", "error");
            },
            success: function () {
                $("a[onClick='ProductSpeficationDelete(" + id + ")']").parent().parent().remove();
                swal("işlem başarılı", "", "success");
            }

        });
    }

    var OptionGetir = function (AttrTypeId) {
        $("#SpecificationAttributeOptionId").prop("disabled", true);
        $.ajax({
            type: "post",
            url: "/Admin/ProductSpecificationAttribute/GetSpeficationOptionById?speficationAttrId=" + AttrTypeId,
            dataType: "json",
            success: function (sonuc) {
                $("#SpecificationAttributeOptionId option").remove();

                if (sonuc.length > 0) {
                    $("#SpecificationAttributeOptionId").prop("disabled", false);
                    $.each(sonuc, function (index, item) {
                        var optionhtml = '<option value="' + item.Id + '">' + item.Name + '</option>';
                        $("#SpecificationAttributeOptionId").append(optionhtml);
                    });
                } else {
                    $.each(sonuc, function (index, item) {
                        var optionhtml = '<option value="' + item.Id + '">' + item.Name + '</option>';
                        $("#SpecificationAttributeOptionId").append(optionhtml);

                    });
                }
            }
        });
    };

    $("select[name='ProductSpecificationAttribute.AttributeTypeId']").on("change", function () {
        var AttrTypeId = $(this).val();
        OptionGetir(AttrTypeId);
    });

    $("#ProductSpeficationCreate").submit(function (event) {
        event.preventDefault();
        $('input[name="ProductSpecificationAttribute.ProductId"]').val($("#Id").val());

        $('input[name="ProductSpecificationAttribute.SpeficationAtributeTypeName"]')
            .val($('select[name="ProductSpecificationAttribute.AttributeTypeId"] option:selected').text());

        $('input[name="ProductSpecificationAttribute.SpecificationAttributeOptionName"]')
            .val($('select[name="ProductSpecificationAttribute.SpecificationAttributeOptionId"] option:selected').text());

        var data = $("#ProductSpeficationCreate").serialize();

        $.ajax({
            type: "Post",
            url: "/Admin/ProductSpecificationAttribute/ProductSpeficationCreate?" + data,
            dataType: "json",
            success: function (result) {
                let formObject = $("#ProductSpeficationCreate").serializeObject("ProductSpecificationAttribute.");
                formObject["Id"] = result.Id;
                $("#ProductSpeficationList").DataTable().row.add(formObject).draw();
            }
        });
    });
</script>
