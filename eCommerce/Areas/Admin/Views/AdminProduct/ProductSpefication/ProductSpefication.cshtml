@model Entities.ViewModels.AdminViewModel.AdminProduct.ProductVM
@using Core.Utilities.Razor;
@{
    ViewData["Title"] = "ProductSpeficationCreate";
    Layout = null;
}
@Html.Partial("ProductSpefication/_ProductSpeficationCreate", Model)
@Html.Partial("ProductSpefication/_ProductSpeficationDataTable", Model)
<script>
    const GetProductSpeficationDatatable = (response)  => {
        let ProductSpeficationTable;
        if ($.fn.DataTable.isDataTable("#productSpeficationList")) {
            ProductSpeficationTable = $("#productSpeficationList").DataTable();
            ProductSpeficationTable.draw();
        }
        else {
            ProductSpeficationTable = $("#productSpeficationList").DataTable({
                "sAjaxSource": "/Admin/ProductSpecificationAttribute/ProductSpeficationJson?Id="+@Model.Id,
                "bServerSide": true,
                "bProcessing": true,
                "bSearchable": true,
                "bLengthChange": false,
                "searching": false,
                "columns": [
                    { "data": "Id", "name": "Id", "autoWidth": true },
                    { "data": "SpeficationAtributeTypeName", "name": "SpeficationAtributeTypeName", "autoWidth": true },
                    { "data": "SpecificationAttributeOptionName", "name": "SpecificationAttributeOptionName", "autoWidth": true },
                    { "data": "DisplayOrder", "name": "DisplayOrder", "autoWidth": true },
                    {
                        data: null,
                        render: function (data, type, row) {
                            if (row.AllowFiltering) {
                                return "<span class='badge badge-success'>Evet</span>";
                            }
                            else {
                                return "<span class='badge badge-danger'>Hayır</span>";
                            }
                        }, "orderable": false
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            if (row.ShowOnProductPage) {
                                return "<span class='badge badge-success'>Evet</span>";
                            }
                            else {
                                return "<span class='badge badge-danger'>Hayır</span>";
                            }
                        }, "orderable": false
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return "<a onClick='ProductSpeficationDelete("+row.Id+")'><i class='fa fa-trash-o datatablesil ' style='font-size:20px;' ></i></a>" ;
                        }, "orderable": false
                    }
                ], "language": {
                    "url": "/datatablelanguage.json"
                }
            });
        }
    }
</script>
