@model Entities.ViewModels.AdminViewModel.AdminProduct.ProductVM
<br />
<div class="table-responsive ps ps--active-x" id="productPhotoListTable">
    <table id="productPhotoTable" class="table tablesorter table-hover dt-responsive nowrapr" width="100%" cellspacing="0">
        <thead>
            <tr>
                <th>Id</th>
                <th>Resim görseli</th>
                <th> </th>
                <th> </th>
            </tr>
        </thead>
    </table>
</div>
<script>
    const GetProductPhotoDatatable = async () => {
        let ProductPhotoDataTable;
        if ($.fn.DataTable.isDataTable("#productPhotoTable")) {
            ProductPhotoDataTable = $("#productPhotoTable").DataTable();
            ProductPhotoDataTable.draw();
        }
        else {
            ProductPhotoDataTable = $("#productPhotoTable").DataTable({
                "ajax": {
                    "url": "/Admin/ProductPhoto/ProductPhotoList?productId=" + $("#Id").val(),
                    "datatype": "json",
                    "type": "POST",
                    "async": false
                },
                dom: '<"bottom">rtip',
                buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print'
                ],
                "orderCellsTop": true,
                "fixedHeader": true,
                "pagingType": "full_numbers",
                "processing": true,
                "serverSide": true,
                "responsive": true,
                "searching": true,
                "columns": [
                    { "data": "Id", "name": "Id", "autoWidth": true },
                    {
                        data: null,
                        "render": function (data, type, row) {
                            return '<img src="' + row.ProductPhotoName + '" height="175px">';
                        }, "orderable": false
                    },
                    {
                        data: null,
                        "render": function (data, type, row) {
                            return '<a class="btn btn btn-outline-default combinationbtn" data-target="#productPhotoTableModal" data-toggle="modal" id="' + row.Id + '" >Kombinasyon</a>';
                        }, "orderable": false
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return "<a href='#' class='DeleteProductPhotoList' id='" + row.Id + "' ><i class='fa fa-trash-o datatablesil ' style='font-size:20px;' ></i></a>";
                        }, "orderable": false
                    },
                ],
                "language": {
                    "url": "/datatablelanguage.json"
                }
            });
        }
    }
</script>
<div class="content">
    <input type="hidden" name="photoid" id="photoid">
    @Html.HiddenFor(x => x.Id)
    <!-- Modal -->
    <div class="modal fade" id="productPhotoTableModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="position:absolute;top:0px;">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Seçebileceğiniz kombinasyonlar</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="combination">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">İptl Et</button>
                    <button type="button" class="btn btn-default" id="ProductPhotoCombinationModalSave" onclick="ProductPhotoCombinationModalSave()">Kaydet</button>
                </div>
            </div>
        </div>
    </div>
</div>
