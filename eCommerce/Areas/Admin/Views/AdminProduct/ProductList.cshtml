@using X.PagedList.Mvc.Core; <!--import to get HTML Helper-->
@using X.PagedList;
@model Entities.ViewModels.Admin.ProductListModel

@{
    ViewBag.Title = "ProductList";
    Layout = "~/Views/Shared/_AdminLayoutPage1.cshtml";
}



<div class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="card ">
                <div class="card-header">
                    <div class="col-md-4" style="float:left;">
                        <h2 class="card-title">Ürün Listesi</h2>
                    </div>
                    <div class="col-md-8" style="float:right;">
                        <div class="col-md-3" style="float:right;"><a type="submit" class="btn btn-outline-default pd10-50" style="text-align:center;" href="/Admin/AdminProduct/ProductEdit?Id=0">Ekle</a></div>

                    </div>
                </div>
                <div class="card-body">
                    <br />
                    <div class="col-md-12">
                        @using (Html.BeginForm("ProductList", "AdminProduct",FormMethod.Post ,new { Id = "ProductListForm" }))
                        {
                            <div style="display:flex;flex-wrap:wrap;">
                                <div class="form-group col-md-6 row">
                                    @Html.LabelFor(x => x.Id, "Id", new { @class = "control-label col-md-2 " })

                                    <div class="col-md-10 ">
                                        @Html.TextBoxFor(model => model.Id, new { @class = " form-control",Type="number",min="0" })

                                    </div>
                                </div>
                                <br />
                                <div class="form-group col-md-6 row">
                                    @Html.LabelFor(x => x.ProductName, "Ürün İsmi", new { @class = "control-label col-md-2 " })

                                    <div class="col-md-10 ">
                                        @Html.TextBoxFor(model => model.ProductName, new { @class = " form-control " })

                                    </div>
                                </div>
                                <br />
                                <div class="form-group col-md-6 row">
                                    @Html.LabelFor(x => x.BrandId, "Marka", new { @class = "control-label col-md-2 " })

                                    <div class="col-md-10 ">
                                        @Html.DropDownListFor(model => model.BrandId,Model.BrandSelectListItems, new { @class = " form-control  " })

                                    </div>
                                </div>
                                <br />
                                <div class="form-group col-md-6 row">
                                    @Html.LabelFor(x => x.CategoryId, "Kategori", new { @class = "control-label col-md-2 " })

                                    <div class="col-md-10 ">
                                        @Html.DropDownListFor(model => model.CategoryId,Model.CategorySelectListItems, new { @class = " form-control  " })

                                    </div>
                                </div>
                                <br />    <br />    <br />
                                <div class="form-group col-md-12 row">

                                    <button type="submit" class="btn btnsearch btn-default " onclick="BindProductList();">Ara</button>&nbsp;&nbsp;
                                    <button type="reset" class="btn btn-dark">Sıfırla</button>

                                </div>
                            </div>
                        }


                    </div>


                    <div class="table-responsive">


                        <br />

                        <div class="table-responsive ps ps--active-x">


                            <table id="ProductList" class="table tablesorter table-hover dt-responsive nowrapr" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>Id</th>
                                        <th>İsim</th>
                                        <th>Marka</th>
                                        <th>Kategori</th>
                                        <th> </th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>


                        <div class="content">
                            @Html.HiddenFor(x => x.Id)
                        </div>



                        <script>
                            var ProductListTableo;
                            var BindProductList = function (response) {
                                if ($.fn.DataTable.isDataTable("#ProductList")) {
                                    ProductListTableo.draw();

                                }
                                else {

                                    ProductListTableo = $("#ProductList").DataTable({
                                        "sAjaxSource": "/Admin/AdminProduct/ProductListJson?Id=" + $("#Id").val()
                                            + "&ProductName=" + $("#ProductName").val()
                                            + "&CategoryId=" + $("#CategoryId").val()
                                            + "&BrandModel.Id=" + $("#BrandId").val(),
                                        "bServerSide": true,
                                        "bProcessing": true,
                                        "bSearchable": true,
                                        "bLengthChange": false,
                                        "searching": false,
                                        
                                        "columns": [
                                            { "data": "Id", "name": "Id", "autoWidth": true },
                                            { "data": "ProductName", "name": "ProductName", "autoWidth": true },
                                            { "data": "BrandName", "name": "BrandId", "autoWidth": true },
                                            { "data": "CategoryName", "name": "CategoryId", "autoWidth": true },
                                            {
                                                data: null,
                                                render: function (data, type, row) {
                                                    return "<a href='#' id='" + row.Id + "' ><i class='fa fa-trash-o datatablesil ' style='font-size:20px;' ></i></a>" +
                                                        "<a href='/Admin/AdminProduct/ProductEdit?Id=" + row.Id + "'><i class='fa fa-edit datatableduzenle' style='font-size:20px;'></i></a>";
                                                }, "orderable": false
                                            },

                                        ],
                                        "language": {
                                            "url": "/datatablelanguage.json"
                                        }
                                       

                                    });

                                }

                            }


                            var FilterRecord = function () {
                                BindProductList();
                            }
                            $(document).ready(function () {
                                BindProductList();
                                var productid = $("#Id").val();

                                $('#ProductList tbody').on('click', '.ProductListDelete', function () {
                                    var combinationid = $(this).attr('Id');

                                    $.ajax({
                                        type: 'GET',
                                        dataType: 'json',
                                        data: 'ProductId=' + productid,
                                        url: '/Admin/AdminProduct/ProductDelete',
                                        success: function (datas) {
                                            toastr.success("Basariyla Silindi");
                                            BindProductList();
                                        },
                                        error: function () {
                                            toastr.warning("Veri Silerken hata");
                                        },
                                    });


                                });


                            });
                            $("#ProductListForm").submit(function (event) {
                                event.preventDefault();
                                $('#ProductList').DataTable().destroy();
                                BindProductList();
                            });

                        </script>



                    </div>


                </div>
            </div>
        </div>

    </div>
</div>


