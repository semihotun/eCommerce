@model Entities.ViewModels.AdminViewModel.AdminProduct.ProductVM


@{Html.RenderPartial("AttrMaping/_AttrMapingCreate", Model);}
@{Html.RenderPartial("AttrMaping/_AttrMapingList", Model);}

<script>
    function MappingtableAdd(item) {
        $("#accordion").append(`
                     <div class="card p-0 m-0 border border-secondary" id="${"Mappingcard" + item.Id}">
                        <div class="card-header p-0 d-flex position-relative" id="${"collapseHeading" + item.Id}">
                            <button type="button" class="btn text-left w-100 p-4 btn-neutral d-flex " onclick="GetMappingAttribute(${item.Id})" id="${"MappingButton" + item.Id}"
                                    data-toggle="collapse" data-target="${"#collapse" + item.Id}" aria-expanded="False" aria-controls="collapseOne">
                                <span class="vertical-absolute-left-center ml-4">
                                    ${item.TextPrompt}
                                </span>
                            </button>
                                <span class="h1 vertical-absolute-right-center mr-4">
                                    <a onclick="AttrMapingEdit(${item.Id})" class="btn btn-outline-default">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a onclick="AttrMapingDelete(${item.Id})" class="btn btn-outline-default">
                                        <i class="fas fa-remove"></i>
                                    </a>
                                </span>
                        </div>
                        <div id="${"collapse" + item.Id}" class="collapse" aria-labelledby="${"collapseHeading" + item.Id}" data-parent="#accordion">
                            <div class="card-body border border-secondary">
                                <table class="table table-hover tablesorter" id="${"MappingTable" + item.Id}">
                                    <thead>
                                        <tr>
                                            <td>İsim</td>
                                            <td>Fiyat Ayarlaması</td>
                                            <td>Ağırlık Ayarlaması</td>
                                            <td>Seçili gelsin</td>
                                            <td>Sıralaması</td>
                                            <td> </td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    <input type="button" class="btn btn btn-outline-default mt-3 mb-3" value="Attribute Ekle" onclick="ChangeTextboxAttributeMappingId(${item.Id})">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
            `
        );
    }

    $("#mappingAdd").click(function () {

        var productMapping = {
            ProductAttributeId: TryInt($("select[name='ProductAttributeId']").val()),
            TextPrompt: TryString($("input[name='ProductAttributeMappingModel.TextPrompt']").val()),
            DisplayOrder: TryInt($("input[name='ProductAttributeMappingModel.DisplayOrder']").val()),
            ProductId: TryInt($("input[name='Id']").val())
        };

        $.ajax({
            url: "/Admin/ProductAttributeMapping/AddProductAttirubeMapping",
            type: "POST",
            data: JSON.stringify(productMapping),
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                MappingtableAdd(data);
                $(':input', '#AttrMapingCreateTable tbody')
                    .not(':button, :submit, :reset, :hidden')
                    .val('')
                    .prop('checked', false)
                    .prop('selected', false);
            },
            error: function (data) {
                console.log("Hata");
            }
        });

    });

    function GetMappingAttribute(id) {
        $("#MappingTable" + id + " tbody").html("");
        $.ajax({
            url: "/Admin/ProductAttributeMapping/ProductAttributeValueList?productAttrMapingId=" + id,
            type: "GET",
            success: function (data) {
                $.each(data,
                    function (index, item) {
                        AddProductMappingAttributeValueTable(item, id);
                    });
            },
            error: function (data) {
                swal("Hata", "", "error");
            }
        });
    }

    function AttrMapingDelete(id) {
        $.ajax({
            url: "/Admin/ProductAttributeMapping/AttrMapingDelete?id=" + id,
            type: "GET",
            success: function (data) {
                $("#Mappingcard" + id).remove();
            },
            error: function (data) {
                swal("Hata", "", "error");
            }
        });
    }

    function DeleteAttributeValue(id) {
        $.ajax({
            url: "/Admin/ProductAttributeMapping/ProductAttributeValueDelete?AttributeValueid=" + id,
            type: "GET",
            success: function (data) {
                $("#AttibuteValue" + id).remove();
            },
            error: function (data) {
                swal("Hata", "", "error");
            }
        });
    }

    var ProductModel = {
        ProductAttributeValue: {
        }
    };

    function ChangeTextboxAttributeMappingId(id) {
        $("#productMappingAttributeValueModal").modal();
        $(':input', '#productMappingAttributeValueModal table tbody')
            .not(':button, :submit, :reset, :hidden,:checkbox')
            .val('');
        $('#productMappingAttributeValueModal table tbody').find('input[type="checkbox"]').prop({ "value": false, checked: false });
        $("input[name='ProductAttributeValue.ProductAttributeMappingId']").val(id);
        $("input[name='ProductAttributeValue.Id']").val(0);
    }

    function AddProductMappingAttributeValue() {
        ProductModel.ProductAttributeValue.Name = TryString($("input[name='ProductAttributeValue.Name']").val());
        ProductModel.ProductAttributeValue.Id = TryInt($("input[name='ProductAttributeValue.Id']").val());
        ProductModel.ProductAttributeValue.PriceAdjustment = TryFloat($("input[name='ProductAttributeValue.PriceAdjustment']").val());
        ProductModel.ProductAttributeValue.WeightAdjustment = TryFloat($("input[name='ProductAttributeValue.WeightAdjustment']").val());
        ProductModel.ProductAttributeValue.ColorSquaresRgb = TryString($("input[name='ProductAttributeValue.ColorSquaresRgb']").val());
        ProductModel.ProductAttributeValue.Cost = TryFloat($("input[name='ProductAttributeValue.Cost']").val());
        ProductModel.ProductAttributeValue.DisplayOrder = TryInt($("input[name='ProductAttributeValue.DisplayOrder']").val());
        ProductModel.ProductAttributeValue.IsPreSelected = $("input[name='ProductAttributeValue.IsPreSelected']").val();
        ProductModel.ProductAttributeValue.ProductAttributeMappingId = TryInt($("input[name='ProductAttributeValue.ProductAttributeMappingId']").val());
        ProductModel.ProductAttributeValue.Quantity = TryInt($("input[name='ProductAttributeValue.Quantity']").val());
        //productAttributeValues.push(productAttributeValue);

        //Create
        if (ProductModel.ProductAttributeValue.Id === 0) {
            console.log(JSON.stringify(ProductModel));
            $.ajax({
                url: "/Admin/ProductAttributeMapping/AddProductEditPageMappingAttributeValue",
                data: JSON.stringify(ProductModel),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                type: "POST",
                success: function (data) {
                    $("input[name='ProductAttributeValue.Id']").val(data.Id);
                    AddProductMappingAttributeValueTable(data, data.ProductAttributeMappingId);      
                    $('#productMappingAttributeValueModal').modal('toggle');
                },
                error: function (xhr, status, error) {
                  
                }
            });
        }
        //Update
        else {
            $.ajax({
                url: "/Admin/ProductAttributeMapping/UpdateProductMappingAttributeValue",
                data: JSON.stringify(ProductModel),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                type: "POST",
                success: function (data) {
                    $("#AttibuteValue" + data.Id).remove();
                    AddProductMappingAttributeValueTable(data, data.ProductAttributeMappingId);
                 
                    $('#productMappingAttributeValueModal').modal('toggle');
                },
                error: function (data) {

                }
            });
        }

    }

    function EditFillAttributeValue(id) {
        $.ajax({
            type: "GET",
            url: '/Admin/ProductAttributeMapping/GetMappingAttributeValue?id=' + id,
            success: function (data) {
                //ispreselected eksik
                $("#productMappingAttributeValueModal").modal();
                $("input[name='ProductAttributeValue.Name']").val(data.Name);
                $("input[name='ProductAttributeValue.PriceAdjustment']").val(data.PriceAdjustment);
                $("input[name='ProductAttributeValue.WeightAdjustment']").val(data.WeightAdjustment);
                $("input[name='ProductAttributeValue.Quantity']").val(data.Quantity);
                $("input[name='ProductAttributeValue.ColorSquaresRgb']").val(data.ColorSquaresRgb);
                $("input[name='ProductAttributeValue.Cost']").val(data.Cost);
                $("input[name='ProductAttributeValue.DisplayOrder']").val(data.DisplayOrder);
                $("input[name='ProductAttributeValue.ProductAttributeMappingId']").val(data.ProductAttributeMappingId);
                $("input[name='ProductAttributeValue.Id']").val(data.Id);
            }
        });

    }

    function AddProductMappingAttributeValueTable(item, mappingId) {
        $("#MappingTable" + mappingId + " tbody").append(
            `
                <tr id="${"AttibuteValue" + item.Id}">
                    <td>${item.Name}</td>
                    <td>${item.IsPreSelected}</td>
                    <td>${item.DisplayOrder}</td>
                    <td><button type="button" class="btn btn-outline-default editbutton" onClick="EditFillAttributeValue(${item.Id})" >Düzenle</button>
                    <a onClick="DeleteAttributeValue(${item.Id})"><button type="button" class="btn btn-outline-danger">Sil </button></a></td>
                </tr>
              `
        );


    }

</script>