@model Entities.ViewModels.AdminViewModel.AdminProduct.ProductVM
@{
    ViewData["Title"] = "AttrCombination";
}
@Html.Partial("AttrCombination/_AttrCombinationInsert", Model)
@{
    Html.RenderPartial("AttrCombination/_AttrCombinationList", Model);
}
<script>
    const GetAttributeCombinationDatatable = (response) => {
        let ProductCombinationTableo;
        if ($.fn.DataTable.isDataTable("#productCombination")) {
            ProductCombinationTableo = $("#productCombination").DataTable();
            ProductCombinationTableo.draw();
        }
        else {
            ProductCombinationTableo = $("#productCombination").DataTable({
                "sAjaxSource": "/Admin/AdminProduct/AttrCombination?ProductId=" + @Model.Id,
                "bServerSide": true,
                "bProcessing": true,
                "bSearchable": true,
                "bLengthChange": false,
                "searching": false,
                "columns": [
                    { "data": "Id", "name": "Id", "autoWidth": true, "visible": false },
                    { "data": "AttributesXml", "name": "AttributesXml", "autoWidth": true },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return "<a href='#' class='DeleteProductCombination'  Id='" + row.Id + "' ><i class='fa fa-trash-o datatablesil ' style='font-size:20px;' ></i></a>" +
                                "<a href='/Admin/AdminProduct/AttrCombinationDetail?CombinationId=" + row.Id + "' ><i class='fa fa-edit datatableduzenle' style='font-size:20px;'></i></a>";
                        }, "orderable": false
                    }
                ], "language": {
                    "url": "/datatablelanguage.json"
                }
            });
        }
    }
</script>
